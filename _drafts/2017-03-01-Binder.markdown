---
layout:     post
title:      "Android"
subtitle:   ""
date:       2017-01-01
author:     "phantomVK"
header-img: "img/main_img.jpg"
catalog:    true
tags:
    - Android
---
Book类的Bean

```java
// Book.java
package com.phantomvk.study.aidl;

import android.os.Parcel;
import android.os.Parcelable;

public class Book implements Parcelable {

    private int mBookID;
    private String mBookName;

    public Book(int bookID, String bookName) {
        mBookID = bookID;
        mBookName = bookName;
    }

    private Book(Parcel in) {
        mBookID = in.readInt();
        mBookName = in.readString();
    }

    public static final Creator<Book> CREATOR = new Creator<Book>() {
        @Override
        public Book createFromParcel(Parcel in) {
            return new Book(in);
        }

        @Override
        public Book[] newArray(int size) {
            return new Book[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(mBookID);
        dest.writeString(mBookName);
    }
}
```

```java
// IBookManager.aidl
package com.phantomvk.study.aidl;

// Declare any non-default types here with import statements
import com.phantomvk.study.aidl.Book;

interface IBookManager {
    List<Book> getList();
    void addBook(in Book book);
}
```


```java
// Book.aidl
package com.phantomvk.study.aidl;

parcelable Book;
```



```java
// IBookManager.java
/*
 * This file is auto-generated.  DO NOT MODIFY.
 * Original file: /Users/coreVK/repositories/Android/Study/app/src/main/aidl/com/phantomvk/study/aidl/IBookManager.aidl
 */
package com.phantomvk.study.aidl;

public interface IBookManager extends android.os.IInterface {
    /**
     * Local-side IPC implementation stub class.
     */
    public static abstract class Stub extends android.os.Binder implements com.phantomvk.study.aidl.IBookManager {
        private static final java.lang.String DESCRIPTOR = "com.phantomvk.study.aidl.IBookManager";

        /**
         * Construct the stub at attach it to the interface.
         */
        public Stub() {
            this.attachInterface(this, DESCRIPTOR);
        }

        /**
         * Cast an IBinder object into an com.phantomvk.study.aidl.IBookManager interface,
         * generating a proxy if needed.
         */
        public static com.phantomvk.study.aidl.IBookManager asInterface(android.os.IBinder obj) {
            if ((obj == null)) {
                return null;
            }
            android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
            if (((iin != null) && (iin instanceof com.phantomvk.study.aidl.IBookManager))) {
                return ((com.phantomvk.study.aidl.IBookManager) iin);
            }
            return new com.phantomvk.study.aidl.IBookManager.Stub.Proxy(obj);
        }

        @Override
        public android.os.IBinder asBinder() {
            return this;
        }

        @Override
        public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException {
            switch (code) {
                case INTERFACE_TRANSACTION: {
                    reply.writeString(DESCRIPTOR);
                    return true;
                }
                case TRANSACTION_getList: {
                    data.enforceInterface(DESCRIPTOR);
                    java.util.List<com.phantomvk.study.aidl.Book> _result = this.getList();
                    reply.writeNoException();
                    reply.writeTypedList(_result);
                    return true;
                }
                case TRANSACTION_addBook: {
                    data.enforceInterface(DESCRIPTOR);
                    com.phantomvk.study.aidl.Book _arg0;
                    if ((0 != data.readInt())) {
                        _arg0 = com.phantomvk.study.aidl.Book.CREATOR.createFromParcel(data);
                    } else {
                        _arg0 = null;
                    }
                    this.addBook(_arg0);
                    reply.writeNoException();
                    return true;
                }
            }
            return super.onTransact(code, data, reply, flags);
        }

        private static class Proxy implements com.phantomvk.study.aidl.IBookManager {
            private android.os.IBinder mRemote;

            Proxy(android.os.IBinder remote) {
                mRemote = remote;
            }

            @Override
            public android.os.IBinder asBinder() {
                return mRemote;
            }

            public java.lang.String getInterfaceDescriptor() {
                return DESCRIPTOR;
            }

            @Override
            public java.util.List<com.phantomvk.study.aidl.Book> getList() throws android.os.RemoteException {
                android.os.Parcel _data = android.os.Parcel.obtain();
                android.os.Parcel _reply = android.os.Parcel.obtain();
                java.util.List<com.phantomvk.study.aidl.Book> _result;
                try {
                    _data.writeInterfaceToken(DESCRIPTOR);
                    mRemote.transact(Stub.TRANSACTION_getList, _data, _reply, 0);
                    _reply.readException();
                    _result = _reply.createTypedArrayList(com.phantomvk.study.aidl.Book.CREATOR);
                } finally {
                    _reply.recycle();
                    _data.recycle();
                }
                return _result;
            }

            @Override
            public void addBook(com.phantomvk.study.aidl.Book book) throws android.os.RemoteException {
                android.os.Parcel _data = android.os.Parcel.obtain();
                android.os.Parcel _reply = android.os.Parcel.obtain();
                try {
                    _data.writeInterfaceToken(DESCRIPTOR);
                    if ((book != null)) {
                        _data.writeInt(1);
                        book.writeToParcel(_data, 0);
                    } else {
                        _data.writeInt(0);
                    }
                    mRemote.transact(Stub.TRANSACTION_addBook, _data, _reply, 0);
                    _reply.readException();
                } finally {
                    _reply.recycle();
                    _data.recycle();
                }
            }
        }
        
        static final int TRANSACTION_getList = (android.os.IBinder.FIRST_CALL_TRANSACTION + 0);
        static final int TRANSACTION_addBook = (android.os.IBinder.FIRST_CALL_TRANSACTION + 1);
    }
    
    public java.util.List<com.phantomvk.study.aidl.Book> getList() throws android.os.RemoteException;
    
    public void addBook(com.phantomvk.study.aidl.Book book) throws android.os.RemoteException;
}
```

```java
// IBookManager.java
/*
 * This file is auto-generated.  DO NOT MODIFY.
 * Original file: /Users/coreVK/repositories/Android/Study/app/src/main/aidl/com/phantomvk/study/aidl/IBookManager.aidl
 */
package com.phantomvk.study.aidl;

public interface IBookManager extends android.os.IInterface {
    /**
     * Local-side IPC implementation stub class.
     */
    public static abstract class Stub extends android.os.Binder
            implements com.phantomvk.study.aidl.IBookManager {
            
        // Binder的唯一标示，一般用当前Binder类名表示
        private static final java.lang.String DESCRIPTOR = "com.phantomvk.study.aidl.IBookManager";

        /**
         * Construct the stub at attach it to the interface.
         */
        public Stub() {
            this.attachInterface(this, DESCRIPTOR);
        }

        /**
         * 把服务端IBinder对象转换为客户端所需的AIDL接口类型对象
         * com.phantomvk.study.aidl.IBookManager；
         * 
         * 如果Client和Service位于同一进程，那么该方法返回服务端
         * Stub对象本身，否则在需要的时候生成一个代理对象
         */
        public static com.phantomvk.study.aidl.IBookManager asInterface(android.os.IBinder obj) {
            if ((obj == null)) {
                return null;
            }
            android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR);
            if (((iin != null) && (iin instanceof com.phantomvk.study.aidl.IBookManager))) {
                return ((com.phantomvk.study.aidl.IBookManager) iin);
            }
            return new com.phantomvk.study.aidl.IBookManager.Stub.Proxy(obj);
        }
        
        // 返回当前Binder对象
        @Override
        public android.os.IBinder asBinder() {
            return this;
        }
        
        // 客户端和服务端不在同一进程时使用
        @Override
        public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException {
            switch (code) {
                case INTERFACE_TRANSACTION: {
                    reply.writeString(DESCRIPTOR);
                    return true;
                }
                case TRANSACTION_getList: {
                    data.enforceInterface(DESCRIPTOR);
                    java.util.List<com.phantomvk.study.aidl.Book> _result = this.getList();
                    reply.writeNoException();
                    reply.writeTypedList(_result);
                    return true;
                }
                case TRANSACTION_addBook: {
                    data.enforceInterface(DESCRIPTOR);
                    com.phantomvk.study.aidl.Book _arg0;
                    if ((0 != data.readInt())) {
                        _arg0 = com.phantomvk.study.aidl.Book.CREATOR.createFromParcel(data);
                    } else {
                        _arg0 = null;
                    }
                    this.addBook(_arg0);
                    reply.writeNoException();
                    return true;
                }
            }
            return super.onTransact(code, data, reply, flags);
        }

        private static class Proxy implements com.phantomvk.study.aidl.IBookManager {
            private android.os.IBinder mRemote;

            Proxy(android.os.IBinder remote) {
                mRemote = remote;
            }

            @Override
            public android.os.IBinder asBinder() {
                return mRemote;
            }

            public java.lang.String getInterfaceDescriptor() {
                return DESCRIPTOR;
            }

            @Override
            public java.util.List<com.phantomvk.study.aidl.Book> getList() throws android.os.RemoteException {
                android.os.Parcel _data = android.os.Parcel.obtain();
                android.os.Parcel _reply = android.os.Parcel.obtain();
                java.util.List<com.phantomvk.study.aidl.Book> _result;
                try {
                    _data.writeInterfaceToken(DESCRIPTOR);
                    mRemote.transact(Stub.TRANSACTION_getList, _data, _reply, 0);
                    _reply.readException();
                    _result = _reply.createTypedArrayList(com.phantomvk.study.aidl.Book.CREATOR);
                } finally {
                    _reply.recycle();
                    _data.recycle();
                }
                return _result;
            }

            @Override
            public void addBook(com.phantomvk.study.aidl.Book book) throws android.os.RemoteException {
                android.os.Parcel _data = android.os.Parcel.obtain();
                android.os.Parcel _reply = android.os.Parcel.obtain();
                try {
                    _data.writeInterfaceToken(DESCRIPTOR);
                    if ((book != null)) {
                        _data.writeInt(1);
                        book.writeToParcel(_data, 0);
                    } else {
                        _data.writeInt(0);
                    }
                    mRemote.transact(Stub.TRANSACTION_addBook, _data, _reply, 0);
                    _reply.readException();
                } finally {
                    _reply.recycle();
                    _data.recycle();
                }
            }
        }
        
        // 为getList()和addBook()分别申明ID
        static final int TRANSACTION_getList = (android.os.IBinder.FIRST_CALL_TRANSACTION + 0);
        static final int TRANSACTION_addBook = (android.os.IBinder.FIRST_CALL_TRANSACTION + 1);
    }
    
    // getList()方法
    public java.util.List<com.phantomvk.study.aidl.Book> getList() throws android.os.RemoteException;
    
    // addBook()方法
    public void addBook(com.phantomvk.study.aidl.Book book) throws android.os.RemoteException;
}
```

