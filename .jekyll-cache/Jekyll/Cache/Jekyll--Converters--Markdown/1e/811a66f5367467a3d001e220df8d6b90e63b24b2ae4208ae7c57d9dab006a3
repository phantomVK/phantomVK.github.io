I"̘<h2 id="一类签名">一、类签名</h2>

<p>用于同进程本地对象注册或发送广播的帮助类。如果广播信息只需要在同进程内收发，则无需发送全局广播，仅发送本地广播即可。</p>

<p>同应用开启多进程不能用本地广播通讯，因为不同进程持有不同 <strong>LocalBroadcastManager</strong> 实例，每个实例间没有关联。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">LocalBroadcastManager</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>相比全局广播，本地广播有以下优点：</p>

<ul>
  <li>正在广播的数据不会离开进程发送到外部，无需担心泄漏隐私数据；</li>
  <li>其他应用无法发送他们的广播到你的应用中，因此不存在安全漏洞问题；</li>
  <li>相比全局广播效率更高，因为本地广播无需通过IPC和其他进程交互；</li>
</ul>

<h2 id="二记录">二、记录</h2>

<p>注册广播接收者，注册时用户提供的信息封装到此对象，发送广播时筛选符合条件的 <strong>ReceiverRecord</strong> 。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">ReceiverRecord</span> <span class="o">{</span>
    <span class="c1">// 注册广播的接收条件</span>
    <span class="kd">final</span> <span class="nc">IntentFilter</span> <span class="n">filter</span><span class="o">;</span>
    <span class="c1">// 广播接收者</span>
    <span class="kd">final</span> <span class="nc">BroadcastReceiver</span> <span class="n">receiver</span><span class="o">;</span>
    <span class="kt">boolean</span> <span class="n">broadcasting</span><span class="o">;</span>
    <span class="kt">boolean</span> <span class="n">dead</span><span class="o">;</span>

    <span class="nc">ReceiverRecord</span><span class="o">(</span><span class="nc">IntentFilter</span> <span class="n">_filter</span><span class="o">,</span> <span class="nc">BroadcastReceiver</span> <span class="n">_receiver</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">filter</span> <span class="o">=</span> <span class="n">_filter</span><span class="o">;</span>
        <span class="n">receiver</span> <span class="o">=</span> <span class="n">_receiver</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>筛选后符合条件的 <strong>ReceiverRecord</strong> 保存到 <strong>BroadcastRecord.receivers</strong> 并逐个通知。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">BroadcastRecord</span> <span class="o">{</span>
    <span class="c1">// 发送广播携带的数据</span>
    <span class="kd">final</span> <span class="nc">Intent</span> <span class="n">intent</span><span class="o">;</span>
    <span class="c1">// 广播接收记录</span>
    <span class="kd">final</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">receivers</span><span class="o">;</span>

    <span class="nc">BroadcastRecord</span><span class="o">(</span><span class="nc">Intent</span> <span class="n">_intent</span><span class="o">,</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">_receivers</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">intent</span> <span class="o">=</span> <span class="n">_intent</span><span class="o">;</span>
        <span class="n">receivers</span> <span class="o">=</span> <span class="n">_receivers</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="三数据成员">三、数据成员</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="c1">// ApplicationContext</span>
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">Context</span> <span class="n">mAppContext</span><span class="o">;</span>

<span class="kd">private</span> <span class="kd">final</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">BroadcastReceiver</span><span class="o">,</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;&gt;</span> <span class="n">mReceivers</span>
        <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;&gt;</span> <span class="n">mActions</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

<span class="c1">// 等待处理的广播的列表</span>
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">BroadcastRecord</span><span class="o">&gt;</span> <span class="n">mPendingBroadcasts</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

<span class="c1">// 有待处理广播的标志位</span>
<span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">MSG_EXEC_PENDING_BROADCASTS</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

<span class="c1">// Handler单例</span>
<span class="kd">private</span> <span class="kd">final</span> <span class="nc">Handler</span> <span class="n">mHandler</span><span class="o">;</span>

<span class="c1">// 同步锁</span>
<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Object</span> <span class="n">mLock</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Object</span><span class="o">();</span>

<span class="c1">// 保存同步锁单例的静态变量</span>
<span class="kd">private</span> <span class="kd">static</span> <span class="nc">LocalBroadcastManager</span> <span class="n">mInstance</span><span class="o">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="四实例">四、实例</h2>

<p>同进程所有线程共享一个 <strong>LocalBroadcastManager</strong> 实例。而 <strong>LocalBroadcastManager</strong> 初始化时持有 <strong>ApplicationContext</strong>，显然其生命周期和整个进程相同。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="nd">@NonNull</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="nc">LocalBroadcastManager</span> <span class="nf">getInstance</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mLock</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">mInstance</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// 持有ApplicationContext</span>
            <span class="n">mInstance</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LocalBroadcastManager</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getApplicationContext</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">mInstance</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="五构造方法">五、构造方法</h2>

<p>构造方法内构造了 <strong>Handler</strong> 实例，负责触发分派到的广播</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="kd">private</span> <span class="nf">LocalBroadcastManager</span><span class="o">(</span><span class="nc">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">mAppContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>

    <span class="c1">// 构造Handler，在主线程回调</span>
    <span class="n">mHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Handler</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getMainLooper</span><span class="o">())</span> <span class="o">{</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="nc">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">case</span> <span class="nl">MSG_EXEC_PENDING_BROADCASTS:</span>
                    <span class="c1">// 执行队列中的广播</span>
                    <span class="n">executePendingBroadcasts</span><span class="o">();</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">default</span><span class="o">:</span>
                    <span class="kd">super</span><span class="o">.</span><span class="na">handleMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">};</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="六成员方法">六、成员方法</h2>

<h4 id="61-注册">6.1 注册</h4>

<p>注册一个匹配指定 <strong>IntentFilter</strong> 时触发的 <strong>BroadcastReceiver</strong>。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">registerReceiver</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">BroadcastReceiver</span> <span class="n">receiver</span><span class="o">,</span>
        <span class="nd">@NonNull</span> <span class="nc">IntentFilter</span> <span class="n">filter</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">// 先获取同步锁</span>
    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mReceivers</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 用传入的变量构造ReceiverRecord</span>
        <span class="nc">ReceiverRecord</span> <span class="n">entry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ReceiverRecord</span><span class="o">(</span><span class="n">filter</span><span class="o">,</span> <span class="n">receiver</span><span class="o">);</span>
        <span class="c1">// 从mReceivers查找该receiver是否已经存在记录</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">filters</span> <span class="o">=</span> <span class="n">mReceivers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">receiver</span><span class="o">);</span>
        <span class="c1">// 记录为空创建新的filters</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">filters</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">filters</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="mi">1</span><span class="o">);</span>
            <span class="n">mReceivers</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">receiver</span><span class="o">,</span> <span class="n">filters</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="c1">// key为receiver，value为ReceiverRecord</span>
        <span class="n">filters</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">entry</span><span class="o">);</span>

        <span class="c1">// 按照Action记录对应的ReceiverRecord</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">filter</span><span class="o">.</span><span class="na">countActions</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="c1">// 从filter逐个获取Action</span>
            <span class="nc">String</span> <span class="n">action</span> <span class="o">=</span> <span class="n">filter</span><span class="o">.</span><span class="na">getAction</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">entries</span> <span class="o">=</span> <span class="n">mActions</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">action</span><span class="o">);</span>
            <span class="c1">// 这个Action没有记录过则创建新记录</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">entries</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">entries</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;(</span><span class="mi">1</span><span class="o">);</span>
                <span class="n">mActions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">action</span><span class="o">,</span> <span class="n">entries</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="c1">// key为Action，value为ReceiverRecord</span>
            <span class="n">entries</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">entry</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="62-注销">6.2 注销</h4>

<p>注销已经注册的 <strong>BroadcastReceiver</strong>，所有该 <strong>BroadcastReceiver</strong> 的 <strong>filters</strong> 也会被移除。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">unregisterReceiver</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">BroadcastReceiver</span> <span class="n">receiver</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mReceivers</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">filters</span> <span class="o">=</span> <span class="n">mReceivers</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">receiver</span><span class="o">);</span>
        <span class="c1">// 该Receiver没有注册过，结束方法的执行</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">filters</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">filters</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
            <span class="kd">final</span> <span class="nc">ReceiverRecord</span> <span class="n">filter</span> <span class="o">=</span> <span class="n">filters</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="n">filter</span><span class="o">.</span><span class="na">dead</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">filter</span><span class="o">.</span><span class="na">filter</span><span class="o">.</span><span class="na">countActions</span><span class="o">();</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kd">final</span> <span class="nc">String</span> <span class="n">action</span> <span class="o">=</span> <span class="n">filter</span><span class="o">.</span><span class="na">filter</span><span class="o">.</span><span class="na">getAction</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
                <span class="kd">final</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">receivers</span> <span class="o">=</span> <span class="n">mActions</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">action</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">receivers</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">receivers</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span> <span class="n">k</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">;</span> <span class="n">k</span><span class="o">--)</span> <span class="o">{</span>
                        <span class="kd">final</span> <span class="nc">ReceiverRecord</span> <span class="n">rec</span> <span class="o">=</span> <span class="n">receivers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">k</span><span class="o">);</span>
                        <span class="k">if</span> <span class="o">(</span><span class="n">rec</span><span class="o">.</span><span class="na">receiver</span> <span class="o">==</span> <span class="n">receiver</span><span class="o">)</span> <span class="o">{</span>
                            <span class="c1">// 标记该接收器已经失效</span>
                            <span class="n">rec</span><span class="o">.</span><span class="na">dead</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                            <span class="c1">// 从列表移除接收器</span>
                            <span class="n">receivers</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">k</span><span class="o">);</span>
                        <span class="o">}</span>
                    <span class="o">}</span>
                  
                    <span class="c1">// actions没有接收器，就直接把整个actions记录移除</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">receivers</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">mActions</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">action</span><span class="o">);</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h4 id="63-发送广播">6.3 发送广播</h4>

<p>通过 <strong>Intent</strong> 发送广播。先获取线程锁 <strong>mReceivers</strong>，所以可以多线程操作。广播正在主线程分发的时候也会获取该锁，所以不存在线程安全问题。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">sendBroadcast</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mReceivers</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 分析Intent</span>
        <span class="kd">final</span> <span class="nc">String</span> <span class="n">action</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">();</span>
        <span class="kd">final</span> <span class="nc">String</span> <span class="n">type</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">resolveTypeIfNeeded</span><span class="o">(</span>
                <span class="n">mAppContext</span><span class="o">.</span><span class="na">getContentResolver</span><span class="o">());</span>
        <span class="kd">final</span> <span class="nc">Uri</span> <span class="n">data</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
        <span class="kd">final</span> <span class="nc">String</span> <span class="n">scheme</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getScheme</span><span class="o">();</span>
        <span class="kd">final</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">categories</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getCategories</span><span class="o">();</span>

        <span class="c1">// 根据发送的action找出已经注册的接收者记录</span>
        <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">entries</span> <span class="o">=</span> <span class="n">mActions</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">());</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">entries</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;</span> <span class="n">receivers</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">entries</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="nc">ReceiverRecord</span> <span class="n">receiver</span> <span class="o">=</span> <span class="n">entries</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
              
                <span class="c1">// 同一个ReceiverRecord多次注册相同条件的IntentFilter不会重复通知</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">receiver</span><span class="o">.</span><span class="na">broadcasting</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>

                <span class="c1">// 检查此ReceiverRecord是否满足接收事件的条件</span>
                <span class="kt">int</span> <span class="n">match</span> <span class="o">=</span> <span class="n">receiver</span><span class="o">.</span><span class="na">filter</span><span class="o">.</span><span class="na">match</span><span class="o">(</span><span class="n">action</span><span class="o">,</span> <span class="n">type</span><span class="o">,</span> <span class="n">scheme</span><span class="o">,</span> <span class="n">data</span><span class="o">,</span>
                        <span class="n">categories</span><span class="o">,</span> <span class="s">"LocalBroadcastManager"</span><span class="o">);</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">match</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">receivers</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                        <span class="n">receivers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">ReceiverRecord</span><span class="o">&gt;();</span>
                    <span class="o">}</span>
                    <span class="c1">// 加入到待通知列表</span>
                    <span class="n">receivers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">receiver</span><span class="o">);</span>
                    <span class="n">receiver</span><span class="o">.</span><span class="na">broadcasting</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="k">if</span> <span class="o">(</span><span class="n">receivers</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">receivers</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="n">receivers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">).</span><span class="na">broadcasting</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="n">mPendingBroadcasts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">BroadcastRecord</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">receivers</span><span class="o">));</span>
                <span class="c1">// 向消息队列放入消息，表示有广播可以分发</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">mHandler</span><span class="o">.</span><span class="na">hasMessages</span><span class="o">(</span><span class="no">MSG_EXEC_PENDING_BROADCASTS</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">mHandler</span><span class="o">.</span><span class="na">sendEmptyMessage</span><span class="o">(</span><span class="no">MSG_EXEC_PENDING_BROADCASTS</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>发送同步广播，但如果发送的 <strong>Intent</strong> 有接收者，则此方法会阻塞线程并直接分发广播。相比 <strong>sendBroadcast(Intent)</strong> 方法把广播放入消息队列等候派发，这个方法会马上占用线程派发，直到派发工作完成。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendBroadcastSync</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">sendBroadcast</span><span class="o">(</span><span class="n">intent</span><span class="o">))</span> <span class="o">{</span>
        <span class="n">executePendingBroadcasts</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>存在有效的广播时触发这个方法，向满足条件的接收者派发广播记录。整个派发过程都在主线程上进行，如果接收器处理逻辑耗时，会阻塞主线程。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="kd">private</span> <span class="kt">void</span> <span class="nf">executePendingBroadcasts</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="nc">BroadcastRecord</span><span class="o">[]</span> <span class="n">brs</span><span class="o">;</span>

        <span class="c1">// 上线程锁</span>
        <span class="kd">synchronized</span> <span class="o">(</span><span class="n">mReceivers</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// 获取待处理广播的数量</span>
            <span class="kd">final</span> <span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="n">mPendingBroadcasts</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="no">N</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">return</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="c1">// 创建与待处理广播数量相同的数组</span>
            <span class="n">brs</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BroadcastRecord</span><span class="o">[</span><span class="no">N</span><span class="o">];</span>
            <span class="c1">// 把所有待处理的广播赋值到新创建的数组中</span>
            <span class="n">mPendingBroadcasts</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="n">brs</span><span class="o">);</span>
            <span class="c1">// 清除待处理广播的列表</span>
            <span class="n">mPendingBroadcasts</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
        <span class="o">}</span>

        <span class="c1">// 遍历刚创建数组的广播事件</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">brs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="c1">// 逐个取出广播</span>
            <span class="kd">final</span> <span class="nc">BroadcastRecord</span> <span class="n">br</span> <span class="o">=</span> <span class="n">brs</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="c1">// 获取广播接收者的数量</span>
            <span class="kd">final</span> <span class="kt">int</span> <span class="n">nbr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">receivers</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">nbr</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="kd">final</span> <span class="nc">ReceiverRecord</span> <span class="n">rec</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">receivers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
                <span class="c1">// 把广播记录派发给所有事件接收者</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">rec</span><span class="o">.</span><span class="na">dead</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">rec</span><span class="o">.</span><span class="na">receiver</span><span class="o">.</span><span class="na">onReceive</span><span class="o">(</span><span class="n">mAppContext</span><span class="o">,</span> <span class="n">br</span><span class="o">.</span><span class="na">intent</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET