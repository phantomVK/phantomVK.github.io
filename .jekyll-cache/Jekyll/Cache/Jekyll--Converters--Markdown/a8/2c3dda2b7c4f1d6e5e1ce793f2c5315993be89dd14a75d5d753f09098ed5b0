I"g+<h1 id="一前言">一、前言</h1>

<p>Android推崇Material Design，其中一个亮点是沉浸式状态栏。该形式状态栏从Android 4.4（v19）开始得到原生支持。这次我们在应用中简单实现一下。</p>

<p>最终实现的效果
<img src="/img/android/toolbar/toolBar.png" alt="img" /></p>

<h1 id="二依赖">二、依赖</h1>

<p>在<code class="highlighter-rouge">build.gradle(Module:app)</code>中添加依赖项，版本根据Android Studio提示使用最新即可，修改完成记得同步一下。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>compile 'com.android.support:appcompat-v7:25.1.0'
compile 'com.android.support:support-v4:25.1.0'
compile 'com.android.support:design:25.1.0'
</pre></td></tr></tbody></table></code></pre></div></div>

<h1 id="三样式">三、样式</h1>

<p>在<code class="highlighter-rouge">res/values/styles.xml</code>新建自定义主题<code class="highlighter-rouge">BaseAppTheme</code>，其父主题是<code class="highlighter-rouge">Theme.AppCompat.Light.NoActionBar</code>，然后再创建一个<code class="highlighter-rouge">BarTheme</code>继承<code class="highlighter-rouge">BaseAppTheme</code>。</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">"BaseAppTheme"</span> <span class="na">parent=</span><span class="s">"Theme.AppCompat.Light.NoActionBar"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"colorPrimary"</span><span class="nt">&gt;</span>@color/colorPrimary<span class="nt">&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"colorPrimaryDark"</span><span class="nt">&gt;</span>@color/colorPrimaryDark<span class="nt">&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"colorAccent"</span><span class="nt">&gt;</span>@color/colorAccent<span class="nt">&lt;/item&gt;</span>
<span class="nt">&lt;/style&gt;</span>

<span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">"BarTheme"</span> <span class="na">parent=</span><span class="s">"BaseAppTheme"</span> <span class="nt">/&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在<code class="highlighter-rouge">res</code>文件夹下新建一个名为<code class="highlighter-rouge">values-v19</code>的文件夹。
<img src="/img/android/toolbar/res.png" alt="img" /></p>

<p>在<code class="highlighter-rouge">res/values-v19/</code>新建一个<code class="highlighter-rouge">styles.xml</code>，名字在IDE里面显示为<code class="highlighter-rouge">styles.xml(v19)</code>。这个样式里面只需编写<code class="highlighter-rouge">BarTheme</code>继承<code class="highlighter-rouge">BaseAppTheme</code>。被继承<code class="highlighter-rouge">BaseAppTheme</code>是上一个<code class="highlighter-rouge">styles.xml</code>设置好的，会自动引用过来。</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;style</span> <span class="na">name=</span><span class="s">"BarTheme"</span> <span class="na">parent=</span><span class="s">"BaseAppTheme"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"android:windowTranslucentStatus"</span><span class="nt">&gt;</span>true<span class="nt">&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"android:windowTranslucentNavigation"</span><span class="nt">&gt;</span>true<span class="nt">&lt;/item&gt;</span>
    <span class="nt">&lt;item</span> <span class="na">name=</span><span class="s">"android:textColorPrimary"</span><span class="nt">&gt;</span>#FFFFFF<span class="nt">&lt;/item&gt;</span>
<span class="nt">&lt;/style&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>三个参数分别作用：</p>

<ul>
  <li>半透明状态栏设置为启用，否则没有沉浸式状态栏效果，参数从v19开始引入；</li>
  <li>为<code class="highlighter-rouge">NavigationView</code>提供半透明支持，通常是左抽屉。没有抽屉不需要这个参数；</li>
  <li>用来改变Toolbar标题文字颜色；</li>
</ul>

<h1 id="四自定义toolbar">四、自定义ToolBar</h1>

<p>在<code class="highlighter-rouge">activity_main.xml</code>自定义ToolBar，<code class="highlighter-rouge">background</code>改变ToolBar的颜色。<code class="highlighter-rouge">fitsSystemWindows</code>是要系统把状态栏的动态和ToolBar相适应，状态栏会跟随ToolBar的颜色改变。</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;android.support.v7.widget.Toolbar</span>
    <span class="na">android:id=</span><span class="s">"@+id/toolBar"</span>
    <span class="na">android:layout_width=</span><span class="s">"match_parent"</span>
    <span class="na">android:layout_height=</span><span class="s">"wrap_content"</span>
    <span class="na">android:background=</span><span class="s">"#0084eb"</span>
    <span class="na">android:fitsSystemWindows=</span><span class="s">"true"</span>
    <span class="na">app:popupTheme=</span><span class="s">"@style/ThemeOverlay.AppCompat.Light"</span> <span class="nt">/&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><code class="highlighter-rouge">fitSystemWindows</code>要点:</p>

<ul>
  <li>只把<code class="highlighter-rouge">fitSystemWindows</code>放在Layout的根布局上，状态栏就和根布局背景颜色一样。</li>
  <li>同时在根布局和<code class="highlighter-rouge">ToolBar</code>上设置<code class="highlighter-rouge">fitSystemWindows</code>，效果跟随根布局，忽略<code class="highlighter-rouge">ToolBar</code>。</li>
  <li>ToolBar的<code class="highlighter-rouge">layout_height</code>不能用<code class="highlighter-rouge">?attr/actionBarSize</code>，只能<code class="highlighter-rouge">wrap_content</code>。</li>
</ul>

<p>在<code class="highlighter-rouge">MainActivity.java</code>中进行初始化：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="nc">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
    <span class="n">setContentView</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

    <span class="nc">Toolbar</span> <span class="n">toolbar</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Toolbar</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">toolBar</span><span class="o">);</span>
    <span class="n">setSupportActionBar</span><span class="o">(</span><span class="n">toolbar</span><span class="o">);</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>最后在<code class="highlighter-rouge">AndroidManifest.xml</code>里面把<code class="highlighter-rouge">Main_Activity</code>的主题换成我们自定义的<code class="highlighter-rouge">BarTheme</code>样式。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>android:theme="@style/BarTheme"
</pre></td></tr></tbody></table></code></pre></div></div>

<p>因为使用其他主题时系统会自行添加一个ToolBar。如果我们又自定义一个，相当于有两个ToolBar，两个ToolBar的冲突会在编译时抛出：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>01-11 19:16:01.596 19257-19257/com.phantomvk.statusbar E/AndroidRuntime: FATAL EXCEPTION: main
     Process: com.phantomvk.statusbar, PID: 19257
     java.lang.RuntimeException: Unable to start activity ComponentInfo{com.phantomvk.statusbar/com.phantomvk.statusbar.MainActivity}: java.lang.IllegalStateException: This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.
         at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2702)
         at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2767)      
         ....
         ....
</pre></td></tr></tbody></table></code></pre></div></div>

<p>所以我们先把主题设置为<code class="highlighter-rouge">NoActionBar</code>，才在<code class="highlighter-rouge">onCreate</code>中<code class="highlighter-rouge">setSupportActionBar(toolbar)</code>里加入自定义的。</p>

<h1 id="五模拟器和物理机差别">五、模拟器和物理机差别</h1>

<p>我注意到Android5.0上物理机和虚拟机显示状态栏的效果不一样。网上也有一些开发者讨论了这个情况。因为手上刚好有Android5.0的三星S4，所以顺手测试了一下。</p>

<p>Android模拟器中状态栏的颜色是半透明，且颜色更深。
<img src="/img/android/toolbar/emulator.png" alt="img" /></p>

<p>S4上就是完全透明，和ToolBar的颜色完全一致。
<img src="/img/android/toolbar/s4.png" alt="img" /></p>

<p>因为现在的手机系统都经过定制，在模拟器上测试的结果，与物理机上测试未必一致。如果在主题样式显示差异有什么疑问，请务必要用多款物理机测试。</p>

:ET