I"f<p>如果Json中有Uri字符串，需要自定义Gson的解释器：</p>

<p>先创建类<code class="highlighter-rouge">UriDeserializer</code></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UriInOut</span> <span class="kd">implements</span> <span class="nc">JsonSerializer</span><span class="o">&lt;</span><span class="nc">Uri</span><span class="o">&gt;,</span> <span class="nc">JsonDeserializer</span><span class="o">&lt;</span><span class="nc">Uri</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">JsonElement</span> <span class="nf">serialize</span><span class="o">(</span><span class="nc">Uri</span> <span class="n">src</span><span class="o">,</span> <span class="nc">Type</span> <span class="n">typeOfSrc</span><span class="o">,</span> <span class="nc">JsonSerializationContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">JsonPrimitive</span><span class="o">(</span><span class="n">src</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Uri</span> <span class="nf">deserialize</span><span class="o">(</span><span class="kd">final</span> <span class="nc">JsonElement</span> <span class="n">src</span><span class="o">,</span> <span class="kd">final</span> <span class="nc">Type</span> <span class="n">srcType</span><span class="o">,</span>
                           <span class="kd">final</span> <span class="nc">JsonDeserializationContext</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">JsonParseException</span> <span class="o">{</span>
        <span class="c1">// Convert "https://phantomvk.com" to https://phantomvk.com</span>
        <span class="k">return</span> <span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">src</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s">"\""</span><span class="o">,</span> <span class="s">""</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>最后构建Gson对象，并注册类型转换器<code class="highlighter-rouge">UriDeserializer</code>即可</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="nc">Gson</span> <span class="n">mGson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GsonBuilder</span><span class="o">()</span>
        <span class="o">.</span><span class="na">registerTypeAdapter</span><span class="o">(</span><span class="nc">Uri</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="nc">UriInOut</span><span class="o">())</span>
        <span class="o">.</span><span class="na">create</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>参考链接：</p>

<ul>
  <li><a href="https://stackoverflow.com/questions/22533432/create-object-from-gson-string-doesnt-work">create-object-from-gson-string-doesnt-work</a></li>
</ul>

:ET